import java.io.*;
import java.math.*;
import java.text.*;
import java.util.*;
import java.util.regex.*;

public class Solution {

    /*
     * Complete the equalStacks function below.
     */
    static int equalStacks(int[] h1, int[] h2, int[] h3) {
        int sum1=0,sum2=0,sum3=0;
        for(int val:h1){
            sum1+=val;
        }
        for(int val:h2){
            sum2+=val;
        }
        for(int val:h3){
            sum3+=val;
        }
        int l1=0,l2=0,l3=0;
        while(sum1 != sum2 || sum1!=sum3 || sum2 != sum3){
            if(l1==h1.length || l2==h2.length || l3==h3.length){
                return 0;
            }
            if(sum1==0 || sum2==0 || sum3==0) {
                return 0;
            }
            if(sum1 >= sum2 && sum1 >= sum3 ) {
                sum1=sum1-h1[l1++];
            }else if(sum2 >= sum1 && sum2 >= sum3) {
                sum2=sum2-h2[l2++];
            }
            else if(sum3 >= sum2 && sum3 >= sum1) {
                sum3=sum3-h3[l3++];
            }
        }
        return sum1;
    }
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] n1N2N3 = scanner.nextLine().split(" ");

        int n1 = Integer.parseInt(n1N2N3[0].trim());

        int n2 = Integer.parseInt(n1N2N3[1].trim());

        int n3 = Integer.parseInt(n1N2N3[2].trim());

        int[] h1 = new int[n1];

        String[] h1Items = scanner.nextLine().split(" ");

        for (int h1Itr = 0; h1Itr < n1; h1Itr++) {
            int h1Item = Integer.parseInt(h1Items[h1Itr].trim());
            h1[h1Itr] = h1Item;
        }

        int[] h2 = new int[n2];

        String[] h2Items = scanner.nextLine().split(" ");

        for (int h2Itr = 0; h2Itr < n2; h2Itr++) {
            int h2Item = Integer.parseInt(h2Items[h2Itr].trim());
            h2[h2Itr] = h2Item;
        }

        int[] h3 = new int[n3];

        String[] h3Items = scanner.nextLine().split(" ");

        for (int h3Itr = 0; h3Itr < n3; h3Itr++) {
            int h3Item = Integer.parseInt(h3Items[h3Itr].trim());
            h3[h3Itr] = h3Item;
        }

        int result = equalStacks(h1, h2, h3);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();
    }
}
